name: AI Code Review

on:
  push:
  pull_request:

jobs:
  ai_review:
    name: Analyse du code avec Gemini
    runs-on: ubuntu-latest
    permissions:
      contents: write       # Pour modifier le README
      pull-requests: write  # Pour créer des PR automatiques

    steps:
      - name: 🔄 Récupération du code du dépôt
        uses: actions/checkout@v4

      - name: 🐍 Configuration de Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Installation des dépendances
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "⚠️ Aucun fichier requirements.txt trouvé, installation ignorée."
          fi

      - name: 🗑️ Supprimer l’ancien rapport PDF
        run: |
          if [ -f ai_report.pdf ]; then
            rm ai_report.pdf
            echo "Ancien rapport supprimé"
          fi

      - name: 🤖 Exécution du reviewer IA (Gemini)
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          EMAIL_SENDER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
        run: |
          echo "🔍 Lancement de l'analyse IA..."
          python ai_code_reviewer.py || {
            echo "❌ L'IA a détecté des erreurs dans le code."
            exit 1
          }

      - name: 🧾 Vérification du rapport PDF généré
        id: check_pdf
        run: |
          if [ -f ai_report.pdf ]; then
            echo "file_exists=true" >> $GITHUB_OUTPUT
            echo "✅ Rapport PDF généré"
          else
            echo "file_exists=false" >> $GITHUB_OUTPUT
            echo "❌ Le rapport PDF n'a pas été généré !"
          fi

      - name: 🧾 Upload du rapport PDF (si généré)
        if: steps.check_pdf.outputs.file_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: AI-Review-Report
          path: ai_report.pdf

      - name: 🏷️ Mise à jour du badge AI Review dans le README
        if: always()
        run: |
          STATUS="❌ Échec"
          COLOR="red"
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="✅ Succès"
            COLOR="green"
          fi
          BADGE_URL="https://img.shields.io/badge/AI%20Code%20Review-${STATUS// /%20}-${COLOR}?style=for-the-badge"
          sed -i '/AI Code Review/d' README.md || true
          echo "![](${BADGE_URL})" >> README.md
          git config user.name "AI Reviewer Bot"
          git config user.email "ai-reviewer@github.com"
          git add README.md
          git commit -m "🔄 Mise à jour automatique du badge AI Code Review" || echo "Aucun changement à committer"
          git push origin HEAD:${{ github.ref }} || echo "Push échoué (branche distante peut-être protégée)"

      - name: 🔁 Création automatique d’une Pull Request si push refusé
        if: failure()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ai-review-fix-${{ github.run_id }}
          title: "🚨 Correction automatique suite à une erreur IA"
          body: |
            L’analyse IA a détecté des erreurs dans le code.
            Consulte le rapport PDF joint et corrige les problèmes avant validation.
